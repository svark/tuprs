---
source: tuprs/tests/parsedir.rs
expression: strings
---
[
  "LocatedStatement { statement: Comment, loc: Loc { line: 1, col: 1, span: 635 } }",
  "LocatedStatement { statement: Comment, loc: Loc { line: 2, col: 1, span: 606 } }",
  "LocatedStatement { statement: Comment, loc: Loc { line: 3, col: 1, span: 569 } }",
  "LocatedStatement { statement: AssignExpr { left: Ident { name: \"TARGET_CPU\" }, right: [Literal(\"x86\")], is_append: false, is_empty_assign: false }, loc: Loc { line: 4, col: 1, span: 19 } }",
  "LocatedStatement { statement: AssignExpr { left: Ident { name: \"TARGET_CPU_IS_X86\" }, right: [Literal(\"0\")], is_append: false, is_empty_assign: false }, loc: Loc { line: 5, col: 1, span: 24 } }",
  "LocatedStatement { statement: IfElseEndIf { then_elif_statements: [CondThenStatements { eq: EqCond { lhs: [DollarExprs(DollarExpr(\"TARGET_CPU\"))], rhs: [Literal(\"x86\")], not_cond: false }, then_statements: [LocatedStatement { statement: AssignExpr { left: Ident { name: \"TARGET_CPU_IS_X86\" }, right: [Literal(\"1\")], is_append: false, is_empty_assign: false }, loc: Loc { line: 7, col: 3, span: 24 } }] }, CondThenStatements { eq: EqCond { lhs: [DollarExprs(DollarExpr(\"TARGET_CPU\"))], rhs: [Literal(\"x86_64\")], not_cond: false }, then_statements: [LocatedStatement { statement: AssignExpr { left: Ident { name: \"TARGET_CPU_IS_X86\" }, right: [Literal(\"1\")], is_append: false, is_empty_assign: false }, loc: Loc { line: 9, col: 3, span: 24 } }] }], else_statements: [LocatedStatement { statement: AssignExpr { left: Ident { name: \"TARGET_CPU_IS_X86\" }, right: [Literal(\"0\")], is_append: false, is_empty_assign: false }, loc: Loc { line: 11, col: 3, span: 24 } }] }, loc: Loc { line: 7, col: 3, span: 123 } }",
  "LocatedStatement { statement: IfElseEndIf { then_elif_statements: [CondThenStatements { eq: EqCond { lhs: [DollarExprs(DollarExpr(\"TARGET_CPU_IS_X86\"))], rhs: [Literal(\"1\")], not_cond: false }, then_statements: [LocatedStatement { statement: AssignExpr { left: Ident { name: \"CFLAGS\" }, right: [Literal(\"-m32\")], is_append: true, is_empty_assign: false }, loc: Loc { line: 15, col: 3, span: 16 } }, LocatedStatement { statement: AssignExpr { left: Ident { name: \"USE_SSE2\" }, right: [Literal(\"1\")], is_append: false, is_empty_assign: false }, loc: Loc { line: 16, col: 1, span: 16 } }] }], else_statements: [] }, loc: Loc { line: 15, col: 3, span: 37 } }",
  "LocatedStatement { statement: IfDef { checked_var_then_statements: [CheckedVarThenStatements { checked_var: CheckedVar(Ident { name: \"USE_SSE2\" }, false), then_statements: [LocatedStatement { statement: IfElseEndIf { then_elif_statements: [CondThenStatements { eq: EqCond { lhs: [DollarExprs(DollarExpr(\"TARGET_CPU_IS_X86\"))], rhs: [Literal(\"0\")], not_cond: false }, then_statements: [LocatedStatement { statement: Message([Literal(\"USE_SSE2\"), Sp1, Literal(\"is\"), Sp1, Literal(\"only\"), Sp1, Literal(\"supported\"), Sp1, Literal(\"on\"), Sp1, Literal(\"x86\")], Error), loc: Loc { line: 21, col: 5, span: 42 } }] }], else_statements: [] }, loc: Loc { line: 21, col: 5, span: 51 } }, LocatedStatement { statement: AssignExpr { left: Ident { name: \"CFLAGS\" }, right: [Literal(\"-msse\")], is_append: true, is_empty_assign: false }, loc: Loc { line: 22, col: 8, span: 21 } }] }], else_statements: [LocatedStatement { statement: AssignExpr { left: Ident { name: \"CFLAGS\" }, right: [Literal(\"-mno-sse\")], is_append: true, is_empty_assign: false }, loc: Loc { line: 25, col: 5, span: 20 } }] }, loc: Loc { line: 20, col: 3, span: 144 } }",
  "LocatedStatement { statement: IfDef { checked_var_then_statements: [CheckedVarThenStatements { checked_var: CheckedVar(Ident { name: \"USE_SSE2\" }, true), then_statements: [LocatedStatement { statement: AssignExpr { left: Ident { name: \"CFLAGS\" }, right: [Literal(\"-mno-sse\")], is_append: true, is_empty_assign: false }, loc: Loc { line: 29, col: 3, span: 20 } }] }], else_statements: [] }, loc: Loc { line: 29, col: 3, span: 25 } }",
  "LocatedStatement { statement: Message([Literal(\"TARGET_CPU_IS_X86=\"), DollarExprs(DollarExpr(\"TARGET_CPU_IS_X86\"))], Info), loc: Loc { line: 30, col: 6, span: 50 } }"
]
